@namespace epub 'http://www.idpf.org/2007/ops';
@namespace xml 'http://www.w3.org/XML/1998/namespace';

/* Declare parameters. Values are passed in from nlb:dtbook-to-pef. */
$show-print-page-numbers: false !default;
$show-braille-page-numbers: false !default;
$line-spacing: false !default;
$include-notes: true !default;
$include-images: true !default;
$include-captions: true !default;
$notes-placement: end-of-volume !default;
$default-table-class: table-matrix !default;
$page-width: 40 !default;
$hyphenation: true !default;
$force-norwegian: true !default;
$duplex: true !default;
$include-strong: true !default;
$include-em: true !default;
/* Ref- req-49 */
h1, h2, h3, h4, h5, h6 {
    /*
     * The '\A\A0' will produce an empty line after a resumed title, only when
     * the resumed title is not empty.
     *
     * TODO: It would be nice if this could be solved with a flexible
     * margin-bottom at the @any-resumed below - the margin-bottom should be 1,
     * except when the content is empty, then it should be 0.
     */
    string-set: resumed-title content() " (Forts.)\A\A0";
}
level1, level2, level3, level4, level5, level6 {
    string-set: resumed-title '';
}
@-obfl-volume-transition {
    @any-resumed {
        white-space: pre-line;
        content: string(resumed-title, start-except-first);
    }
}




/* -------------------------------------------------------------------------- */
/*                page                                                        */
/* -------------------------------------------------------------------------- */

/* Count pages continuously but hide them in generated pages */
@page {
    // set counter-increment explicitly because otherwise it will
    // be implicitly set to "pre-page" or "post-page" when in a
    // volume area context.
    counter-increment: page;
    margin-right: 2;
    @if $show-print-page-numbers {
        margin-left: 2;
    } @else {
        margin-left: 1;
    }
}

book, body {
    page: body;
}

.pef-titlepage, .pef-about,
#generated-volume-toc, #generated-document-toc {
    page: auto;
}

/* -------------------------------------------------------------------------- */
/*                braille and print page numbers                              */
/* -------------------------------------------------------------------------- */

/* Don't show pagenumber inline. Store reference in case we want to show marker in margin. */
pagenum, *[epub|type~='pagebreak'] {
    display: none;
    -obfl-marker: pagenum;
}

/* Show page numbers in bodymatter and backmatter. */
@if $show-print-page-numbers {
    /* defined in dtbook-to-pef:
    pagenum {
            string-set: print-page content();
    }*/
   /* frontmatter pagenum,
    bodymatter pagenum,
    rearmatter pagenum {*/
        pagenum {
            string-set: print-page content()
                        print-page-break-indicator "⠿";
            &::after {
                    string-set: print-page-break-indicator "";
            }
    }
    [epub|type~='pagebreak'] {
            &[title] {
                    string-set: print-page attr(title)
                                print-page-break-indicator "⠿";
            }
            &:not([title]) {
                    string-set: print-page content()
                                print-page-break-indicator "⠿";
            }
            &::after {
                    string-set: print-page-break-indicator "";
            }
    }
    /*[epub|type~='frontmatter'] [epub|type~='pagebreak'] {
            &[title] {
                    string-set: print-page attr(title);
            }
            &:not([title]) {
                    string-set: print-page content();
            }
    }*/
    
    /* clear print page number after frontmatter (so that 'last' page does not point from bodymatter to frontmatter) */
    bodymatter {
        string-set: print-page "";
    }
    /* bodymatter sections are not quaranteed to have a epub:type (top-level sections without are implicitly bodymatter) */
    body[epub|type~='frontmatter'] + body:not([epub|type~='frontmatter']),
    section[epub|type~='frontmatter'] + section:not([epub|type~='frontmatter']) {
        string-set: print-page "";
    }
}

@page body {
    
    @if $show-print-page-numbers or $show-braille-page-numbers {
            margin-bottom: 1;
    }
    @if $show-print-page-numbers {
            @bottom-right {
                    content: string(print-page-break-indicator, first)
                             string(print-page, last);
            }
            @left {
                    content: -obfl-marker-indicator(pagenum, '⠿');
                    text-transform: none;
            }
    }

    @if $show-braille-page-numbers {
            @bottom-center {
                    content: counter(page);
            }
    }
 }
/* -------------------------------------------------------------------------- */
/*               line spacing                                                 */
/* -------------------------------------------------------------------------- */

@if $line-spacing == double {
    :root {
            line-height: 1;

            /* to cancel out generic rule */
    }

    frontmatter level1:not(.pef-titlepage,
                           .pef-about),
    bodymatter,
    body:not([epub|type~='backmatter'],
             .pef-titlepage,
             .pef-about),
    section:not([epub|type~='backmatter'],
                .pef-titlepage,
                .pef-about) {
            line-height: 2;
    }

    @page body:left {
            margin-top: 1;
    }
}

/* -------------------------------------------------------------------------- */
/*                 Volume breaking                                            */
/* -------------------------------------------------------------------------- */

/* Parts */
level1.part, section[epub|type~='part'] {
    page-break-before: right;
    
    & ~ level1.part,
    & ~ section[epub|type~='part'] {
        /* Note: this selector assumes that parts in EPUBs are sibling elements */
        
        /* Always start a new volume before a new part */
        volume-break-before: always;
    }
}

/* Always start top-level chapters on right-hand page: DTBook */
level1:not(.part,
           .pef-titlepage,
           .pef-about),
level1.part > level2 {
        page-break-before: right;
}

/* Always start top-level chapters on right-hand page: EPUB/HTML */
html:has(body ~ body) > body,
html:not(:has(body ~ body)) > body > section {
        &:not(.pef-titlepage,
              .pef-about) {
                &:not([epub|type~='part']),
                &[epub|type~='part'] > section {
                        page-break-before: right;
                }
        }
}

/* Don't split "leaf sections" across volumes.
 * 
 * A leaf section is a block of adjacent content with the same sectioning depth.
 * Which means:
 * - either; a section element with no child sections
 * - or; the content in a section (<h1>, <p>, etc.), which may have section element siblings
 * 
 * If a section contains other sections, then the normal content (<h1>, <p>, etc.) in the
 * section is wrapped in a <div class="leaf-section"> element by pre-processing.xsl.
 */

/*section:not(:has(> section, > div.leaf-section)),
level1:not(:has(> level2, div.leaf-section)),
level2:not(:has(> level3, div.leaf-section)),nynorsk
level3:not(:has(> level4, div.leaf-section)),
level4:not(:has(> level5, div.leaf-section)),
level5:not(:has(> level6, div.leaf-section)),
level6:not(:has(div.leaf-section)),
div.leaf-section {
    volume-break-inside: -obfl-keep(5);
      
    &:has(~ *) {
    
        ** Keep the first child element of a leaf section together with the next sheet.
           This should prevent orphaned content if the leaf section is very small. **
        :first-child {
            -obfl-keep-with-next-sheets: 1;
        }
        
        h1, h2, h3, h4, h5, h6 {
           

            -obfl-keep-with-next-sheets: 1;
        }
    }
}
*/
/* Avoid page breaks after a headline (orphaned headline) */
h1, h2, h3, h4, h5, h6 {
    page-break-after: avoid;
}

/* Class that can be used to insert manual volume breaks */
*.braille-volume-break-before {
    volume-break-before: always;
}
br.volume-break {
    volume-break-before: always;
}

/* Class that can be used to insert manual page breaks */
*.braille-page-break-before {
    page-break-before: always;
}
/* -------------------------------------------------------------------------- */
/* Book structure, including headlines, toc, titlepage, etc.                  */
/* -------------------------------------------------------------------------- */

section {
    display: block;
}

/* -------------------------------------------------------------------------- */
/*                        Generated content CSS                               */
/* -------------------------------------------------------------------------- */

/* Insert generated content at start of volume */
@volume {
    @begin {
           content: flow(front, document) flow(volume-toc, document);   
           /* print both doc-toc and volume toc in each volume with different toc-levels */
         /*  content: flow(front) flow(front-first) flow(document-toc) flow(volume-toc);   */
            
    }
}
@volume :first {
    @begin {
           content: flow(front, document) flow(front-first, document) flow(document-toc, document) flow(volume-toc, document);
         /*    content: flow(front) flow(front-first) flow(volume-toc);*/
    
    }
}

/* this elements is generated by insert-boilerplate.xsl
* it is inserted in the frontmatter (first body) before the first level1 (section) */
.pef-titlepage {
    flow: front;
    display: block;
   /* volume-break-after: avoid;*/
    text-transform: uncontracted;
    margin-top: 0;
    margin-left: 1;
    margin-right: 1;
    hyphens: none;
    
    & > p{
        margin-top: 0;
        margin-bottom: 0;
        /*text-indent: 0;*/
      
        text-align: left;
    }
    & > .Innrykk-5{
        text: indent 18em;
    }
     & > .Høyre-justert{
        text-align: right;
    }
 }

.pef-volume {
    &::before {
            content: "Hefte " -obfl-evaluate("(round $volume)");
    }
    
    &::after {
            content: -obfl-evaluate("(round $volumes)");
    }
}

/* #generated-*-toc is a <list> in DTBook and <ol> in HTML
* these elements are generated by px:dtbook-to-pef.convert */

html:has(> head > meta[name="dc:language"][content|="nn"]) #generated-document-toc::-obfl-on-toc-start {
    content: 'Innhald for heile boka:';
}
html:has(> head > meta[name="dc:language"][content|="no"]) #generated-document-toc::-obfl-on-toc-start {
    content: 'Innhold for hele boka:';
}   
html:has(> head > meta[name="dc:language"][content|="nb"]) #generated-document-toc::-obfl-on-toc-start {
    content: 'Innhold for hele boka:';
}   
#generated-document-toc
{
    // flow: volume-toc; // default for #generated-volume-toc
    // flow: document-toc; // default for #generated-document-toc
    /* volume-break-after: avoid;*/
   // "page-break-before: always" <- line was removed here and added below
    margin-left: 0; // no left margin on toc lists
    margin-top: 0; // <- this line was added
    margin-bottom: 0; // <- this line was added

    
    &::-obfl-on-toc-start
    {
        page-break-before: always; // <- this line was added
        display: block;
        border-bottom: none;
        border-left: none;
        border-right: none;
        border-top: none;
        margin-bottom: 1;
        margin-left: 5;
        margin-right: 4;
        margin-top: 2;
        text-align: left;
        text-indent: 0;
        hyphens: none;
    }

    
    
    li 
    {
          
            
            & a 
            {
                display: block;
                margin-left: 2;
              /* -obfl-left-text-indent: 2;*/
                -obfl-right-text-indent: 3;
              /*  margin-right: 3; */
                margin-top: 0;
                text-indent: -2;
                &::after 
                {
                    /* The print page numbers are placed in rounded brackets after each heading in the TOC.*/
                    content: " (" target-string(attr(href), print-page) ")"
                             " " leader("⠄", $page-width - if($show-print-page-numbers, 2, 1) - 2, right)
                             " " target-counter(attr(href), page);
                }
                /* ref- requirement 55 */
              /*  &::-obfl-on-resumed {
                    content: target-text(attr(href))
                             " (Forts.)"*/
                           /*  " " leader("⠄", $page-width - if($show-print-page-numbers, 2, 1) - 2, right)
                             " " -obfl-evaluate('$started-volume-first-content-page');
                }*/
            }
    
    }
}


    
html:has(> head > meta[name="dc:language"][content|="nn"]) #generated-volume-toc::-obfl-on-toc-start {
    content: 'Innhald for heftet:';
}
html:has(> head > meta[name="dc:language"][content|="no"]) #generated-volume-toc::-obfl-on-toc-start {
    content: 'Innhold for heftet:';
}
html:has(> head > meta[name="dc:language"][content|="nb"]) #generated-volume-toc::-obfl-on-toc-start {
    content: 'Innhold for heftet:';
}
#generated-volume-toc
{
    // flow: volume-toc; // default for #generated-volume-toc
    // flow: document-toc; // default for #generated-document-toc
    /* volume-break-after: avoid;*/
   // "page-break-before: always" <- line was removed here and added below
    margin-left: 0; // no left margin on toc lists
    margin-top: 0; // <- this line was added
    margin-bottom: 0; // <- this line was added

    
    &::-obfl-on-toc-start
    {
        page-break-before: always; // <- this line was added
        display: block;
        border-bottom: none;
        border-left: none;
        border-right: none;
        border-top: none;
        margin-bottom: 1;
        margin-left: 5;
        margin-right: 4;
        margin-top: 2;
        text-align: left;
        text-indent: 0;
        hyphens: none;
    }

    
    
    li 
    {
          
            
            & a 
            {
                display: block;
                margin-left: 2;
              /* -obfl-left-text-indent: 2;*/
                -obfl-right-text-indent: 3;
              /*  margin-right: 3; */
                margin-top: 0;
                text-indent: -2;
                &::after 
                {
                    /* The print page numbers are placed in rounded brackets after each heading in the TOC.*/
                    content: " (" target-string(attr(href), print-page) ")"
                             " " leader("⠄", $page-width - if($show-print-page-numbers, 2, 1) - 2, right)
                             " " target-counter(attr(href), page);
                }
                /* ref- requirement 55 */
              /*  &::-obfl-on-resumed {
                    content: target-text(attr(href))
                             " (Forts.)"*/
                           /*  " " leader("⠄", $page-width - if($show-print-page-numbers, 2, 1) - 2, right)
                             " " -obfl-evaluate('$started-volume-first-content-page');
                }*/
            }
    
    }
}

/*It all depends on how you style the TOC. You are currently specifying in CSS that you want continued chapters in both the full TOC and the volume TOCs.
 To include them only in the volume TOCs but not in the full TOC, you should have the following CSS: */
#generated-volume-toc li a::-obfl-on-resumed {
    content: target-text(attr(href)) " (Forts.)"
}
/* To limit the number of levels of headings in a TOC, there is the global "toc-depth" parameter, but in addition you can also limit the number of levels using CSS:*/
#generated-document-toc > li > ol {
    display: none;
}



/* these elements are generated by insert-boilerplate.xsl
* they are inserted after .pef-titlepage
* there can be multiple .pef-about elements; the first one is a level1 (body) and starts with a h1
*/
.pef-about {
    
    // can not be put in the normal flow because of how the .notes-placement and .notes-placement-fallback
    // fields are currently implemented

    flow: front-first;
    hyphens: none;
   
    /* volume-break-after: avoid;*/
}


/* Page count */
.pef-pages {
    display: inline;
}



.pef-pages::after {
    display: inline;
    @if $duplex {
            content: -obfl-evaluate("(round (* $sheets-in-document 2))");
    } @else {
            content: -obfl-evaluate("(round $sheets-in-document)");
    }
}

/* -------------------------------------------------------------------------- */
/*                                  general                                   */
/* -------------------------------------------------------------------------- */
head {
    display: none;
}

body[epub|type~='cover'], section[epub|type~='cover'], level1.jacketcopy {
display: none;
}

level1,
bodymatter, rearmatter, body:not([epub|type~='frontmatter']) {
    display: block;
}

frontmatter, *[epub|type~='frontmatter'] {
    display: none;
    &:has(> *:not(doctitle,
                  h1[epub|type~='fulltitle'],
                  h1[epub|type~='z3998:covertitle'],
                  docauthor,
                  h1[epub|type~='z3998:author'],
                  .pef-titlepage,
                  .pef-about
                  )) {
            display: block;
    }
}

blockquote, sidebar, aside[epub|type~='sidebar'], epigraph, aside[epub|type~='epigraph'],
.Rammetekst, poem, section[epub|type~='z3998:poem'], div[epub|type~='z3998:poem'], linegroup, section.linegroup, div.linegroup, line, p.line {
    display: block;
}

doctitle, h1[epub|type~='fulltitle'], h1[epub|type~='z3998:covertitle'], docauthor, h1[epub|type~='z3998:author'] {
    display: none;
}

/* -------------------------------------------------------------------------- */
/*                Text formatting                                             */
/* -------------------------------------------------------------------------- */

/*@text-transform strong {
    system: -nlb-indicators;
  
    open: "⠆";
    close: "⠰";
}


@text-transform em {
    system: -nlb-indicators;
    open: "⠆";
    close: "⠰";
}

@text-transform u {
    system: -nlb-indicators;
    open: "⠸";
    close: "⠸";
}

@text-transform strike {
    system: -nlb-indicators;
    open: "⠐⠂";
    close: "⠐⠂";
} */

@if ($include-strong) {
    strong, b {
        @if ($include-em) {
          /*  text-transform: strong;*/
          /* NB! strong and em shall both have 23...56 */
          text-transform: -louis-italic;
            :root:not(:has(em, i)) & {
                text-transform: -louis-italic;
            }
        } @else {
           /* text-transform: em; */
            text-transform: -louis-italic;
        }
    }
}

@if ($include-em) {
    em, i {
       /* text-transform: em;*/
       text-transform: -louis-italic;
    }
}

u {
    text-transform: u;
}

strike, s {
    text-transform: strike;
}

sub {
    text-transform: -louis-sub;
}

sup {
    text-transform: -louis-super;
}

/* -------------------------------------------------------------------------- */
/*                Uncontracted content                                        */
/* -------------------------------------------------------------------------- */

.uncontracted-letters, h1 {
    text-transform: uncontracted;
}

[xml|lang]:not([xml|lang|="no"]), [lang]:not([lang|="no"]) {
    text-transform: uncontracted;
    
    /* "contracted" means "allow contracted" */
    [xml|lang|="no"], [lang|="no"] {
            text-transform: contracted;
    }
}

@if $hyphenation and $force-norwegian {
[xml|lang]:not([xml|lang|="no"]), [lang]:not([lang|="no"]) {
    hyphens: manual;
    [xml|lang|="no"], [lang|="no"] {
        hyphens: auto;
    }
}
}

/* -------------------------------------------------------------------------- */
/*                Thematic breaks                                             */
/* -------------------------------------------------------------------------- */

/* Note: The DTBook classes precedingseparator and precedingemptyline */
/*       are replaced with hr elements during preprocessing.          */

hr::before {
    display: block;
    text-align: center;
    content: "⠄⠄⠄⠄⠄⠄⠄⠄";
    margin-bottom: 1;
    margin-top: 1;
}

hr.emptyline::before {
    content: "";
    margin-bottom: 0;
}

/* -------------------------------------------------------------------------- */
/*                Special classes                                             */
/* -------------------------------------------------------------------------- */

.Rammetekst {
    margin-top: 1;
    margin-bottom: 1;
    text-indent: 2;
    text-align: left;
    margin-left: 2;
}

.Rammetekst::before {
    content: "Rammetekst: ";
}

[showin^="x"], [class*="showin-x"], .hidden-braille {
    display: none;
}

/* -------------------------------------------------------------------------- */
/*                Headlines                                                     */
/* -------------------------------------------------------------------------- */

/* depth 6 */
h6 {
    /*border-bottom: ⠉;*/
    border-left: none;
    border-right: none;
    border-top: none;
    margin-bottom: 0;
    margin-left: 0;
    margin-right: 5;
    margin-top: 1;
    text-align: left;
    text-indent: 0;
    hyphens: none;
}

/* depth 5 */
h5, level1.part h6, *[epub|type~='part'] h6 {
    border-bottom: none;
    border-left: none;
    border-right: none;
    border-top: none;
    margin-bottom: 0;
    margin-left: 0;
    margin-right: 5;
    margin-top: 1;
    text-align: left;
    text-indent: 0;
    hyphens: none;
}

/* depth 4 */
h4, level1.part h5, *[epub|type~='part'] h5 {
    border-bottom: none;
    border-left: none;
    border-right: none;
    border-top: none;
    margin-bottom: 0;
    margin-left: 0;
    margin-right: 5;
    margin-top: 1;
    text-align: left;
    text-indent: 0;
    hyphens: none;
}

/* depth 3 */
h3, level1.part h4, *[epub|type~='part'] h4 {
    border-bottom: none;
    border-left: none;
    border-right: none;
    border-top: none;
    margin-bottom: 0;
    margin-left: 5;
    margin-right: 4;
    margin-top: 1;
    text-align: left;
    text-indent: 0;
    hyphens: none;
}

/* depth 2 */
h2, level1.part h3, *[epub|type~='part'] h3 {
    border-bottom: none;
    border-left: none;
    border-right: none;
    border-top: none;
    margin-bottom: 1;
    margin-left: 5;
    margin-right: 4;
    margin-top: 2;
    text-align: left;
    text-indent: 0;
    hyphens: none;
}

/* depth 1 */
h1, level1.part h2, *[epub|type~='part'] h2 {
     /* border-bottom: ⠤;*/
     border-bottom: none;
    border-right: none;
    /*border-top: ⠉;*/
    border-top: none;
    margin-bottom: 1;
    margin-left: 5;
    margin-right: 4;
    margin-top: 2;
    text-align: left;
    text-indent: 0; 
    hyphens: none;
  /*  &::after{
        content: "\A ccccccccccccccccccccccccc";
        white-space:pre;
    }*/
}

/* part */
level1.part h1, *[epub|type~='part'] h1 {
    border-bottom: ⠤;
    border-left: ⠇;
    border-right: ⠸;
    border-top: ⠉;
    margin-bottom: 2;
    margin-left: 2;
    margin-right: 2;
    margin-top: 2;
    padding-left: 1;
    padding-right: 1;
    text-align: center;
    text-indent: 0;
    hyphens: none;
}

h1 {
    -obfl-underline: ⠉;
 }

/* level1 without headline */
/*level1:not(.part, .pef-titlepage, .pef-about):not(:has(> h1, > hx, > .leaf-section > h1, > .leaf-section > hx)),
level1.part > level2:not(:has(> h2, > hx, > .leaf-section > h2, > .leaf-section > hx)),
body > section:not([epub|type~='part'], .pef-titlepage, .pef-about, [epub|type~='z3998:poem']):not(:has(> h1, > .leaf-section > h1)),
[epub|type~='part']:not([epub|type~='z3998:poem']) > section:not(:has(> h2, > .leaf-section > h2)) {
    padding-top: 5;
}
*/


/* -------------------------------------------------------------------------- */
/*                Other elements                                              */
/* -------------------------------------------------------------------------- */

p {
    text-indent: 2;
    text-align: left;
    widows: 2;
    orphans: 2;
}

figure.image + p {
    margin-top: 1;
  }

  figure.image + div[epub|type~='pagebreak'] + p{
    margin-top: 1;
}

figure.image + ul {
	margin-top: 1;
	  }
	
	figure.image + ol {
	    margin-top: 1;
	  }

p.braille-no-indent {
    text-indent: 0;
    text-align: left;
    widows: 2;
    orphans: 2;
}

.image{
color:aliceblue;
/*dummy class*/
}

blockquote {
    margin-top: 1;
    margin-bottom: 1;
    margin-left: 2;
    text-indent: 2;
    text-align: left;
}

sidebar,
epigraph,
aside {
    margin-top: 1;
    margin-bottom: 1;
    margin-left: 2;
}

sidebar, aside[epub|type~='sidebar'] {
    text-indent: 2;
    text-align: left;
    orphans: 3;
}

.braille-aside-no-indent{
    margin-left: 0;
    text-indent: 0;
    text-align: left;
    orphans: 3;
    widows: 3;
   }

sidebar::before, aside[epub|type~='sidebar'] {
  /*  border-top: ⠤;
    border-bottom: ⠉;*/
}
sidebar, aside[epub|type~='sidebar'] p:first-child {
    text-indent: 0;
    text-align: left;
}

/*li p:first-child {
    text-indent: 0;
    text-align: left;
}*/

.braille-aside-strek{
    margin-left: 0;
    text-indent: 0;
    text-align: left;
    border-top: ⠤;
    border-bottom: ⠉;
    orphans: 3;
    widows: 3;
   }

epigraph, aside[epub|type~='epigraph'] {
    text-indent: 2;
    text-align: left;
}

prodnote, aside[epub|type~='z3998:production']  p:first-child {
    display: inline;
    text-indent: 0;
    text-align: left;
}
/*prodnote, aside[epub|type~='z3998:production'] {
  display: block;
   margin-top: 0;
   margin-bottom: 0;
   margin-left: 2;
   position: relative;

   &::before {
           display: inline;
           content: "⠰⠄";
   }
   &::after {
           margin-top: 0;
           position: absolute;
           display: inline;
           content: "⠠⠆";
   }
  
}*/


prodnote, aside[epub|type~='z3998:production'] {
    display: block;
    margin-top: 0;
    margin-bottom: 0;
    margin-left: 2;

    > :first-child:not(ul, ol)::before,
    > ul:first-child > :first-child::before,
    > ol:first-child > :first-child::before,
    &:not(:has(*))::before {
        content: "⠰⠄";
    }

    > :last-child:not(ul, ol)::after,
    > ul:last-child > :last-child::after,
    > ol:last-child > :last-child::after,
    &:not(:has(*))::after {
        content: "⠠⠆";
    }
}

/*aside[epub|type~='z3998:production'] {
    display: block;
    margin-top: 0;
    margin-bottom: 0;
    margin-left: 2;

    > :first-child:not(ol)::before,
    > ol:first-child > :first-child::before,
    &:not(:has(*))::before {
        content: "⠰⠄";
    }

    > :last-child:not(ol)::after,
    > ol:last-child > :last-child::after,
    &:not(:has(*))::after {
        content: "⠠⠆";
    }
}*/


div{
    margin-top: 1;
    margin-bottom: 1; 
 /*   display: block; */
}

/* bruker epub:type for å skille mellom text-indent 0 og 2*/
div[epub|type~='sidebar']
{
    margin-left: 2;
    text-indent: 2; 
  /*  &::before {
        content: "⠰⠄test2 div sidebar"; */ 
}
div[epub|type~='sidebar'] p:first-child {
    text-indent: 0;
    text-align: left;
}
/*div > p {
    margin-left: 2;
    text-indent: 2;
  }
*/


.braille-div-strek{
    border-top: ⠤;
    border-bottom: ⠉;   
}


/*.braille-div-block{
    margin-left: 0;
    text-indent: 0;
    text-align: left;
    &::before {
        content: "⠰⠄test div-block m:0 i:0";
}
}*/

/* -------------------------------------------------------------------------- */
/*                Images                                                      */
/* -------------------------------------------------------------------------- */

/* Show image captions */
@if $include-captions {
    imggroup, figure:has(img) {
            display: block;
                    caption, figcaption {
                    display: block;
                    margin-top: 0;
                    margin-bottom: 0;
                    margin-left: 2;
                    text-indent: 2;
                    text-align: left;
                    
                    &::before {
                            content: "Bildetekst: ";
                    }
            }
    }
} @else {
    imggroup, figure:has(img) {
        caption, figcaption {
            display: none;
        }
    }
}

/* Show alt text for images with alt text */
@if $include-images {
    img[alt]:not([alt='']):not([alt='image'])::after {
            display: block;
            content: "Bilde: " attr(alt);
            orphans: 2; /* todo check */
            margin-top: 1;
            margin-bottom: 0;
            margin-left: 2;
            text-indent: 0;
            text-align: left;
    }
    
    /* Don't render decorative images */
    img:not([alt])::after, img[alt='']::after, img[alt='image']::after {
            content: none;
    }
} @else {
    img {
            display: none;
            &::after {
                    content: none;
            }
    }
}

/* -------------------------------------------------------------------------- */
/*                Poems                                                       */
/* -------------------------------------------------------------------------- */

poem, section[epub|type~='z3998:poem'], div[epub|type~='z3998:poem'] {
    margin-top: 1;
    margin-bottom: 1;
    text-indent: 2;
    text-align: left;
}

linegroup, section.linegroup, div.linegroup {
    margin-top: 1;
    margin-bottom: 1;
    text-indent: -2;
}

line, p.line {
    margin-left: 2;
    text-indent: -2;
}

/* -------------------------------------------------------------------------- */
/*                Lists                                                       */
/* -------------------------------------------------------------------------- */

list, ul, ol, dl {
    margin-top: 0;
    margin-left: 2;
    margin-bottom: 1;
}


li p:first-child {
    display: inline;
    text-indent: 0;
    text-align: left;
}
/*prodnote, aside[epub|type~='z3998:production'] li:last-child {
    display: inline;
    text-indent: 0;
    text-align: left;
}*/
li {
    text-indent: -2;
    text-align: left;
    display: list-item;
    orphans: 2;
    
    list, ul, ol {
        margin-top: 0;
        margin-bottom: 0;
    }
}

list, ul, ol, dl {
    counter-reset: list-item;
}

list[type=ul], ul {
    list-style-type: '⠤⠤';
}

list[type=ol], ol {
    list-style-type: decimal;
}

dl, list[type=pl], .list-style-type-none {
    list-style-type: none;
}

dt, dd {
display: inline;
/*orphans: 2;*/
} 
/* added list-style-type classes */

.list-style-type-decimal {
    list-style-type: decimal;
}

.list-style-type-decimal::after {
    content: ".";
} 
   
.list-style-type-lower-roman {
    list-style-type: lower-roman;
}

.list-style-type-lower-roman::after {
    content: ".";
} 
.list-style-type-upper-roman {
    list-style-type:upper-roman;
}

.list-style-type-upper-roman::after {
    content: ".";
} 

.list-style-type-lower-alpha {
    list-style-type: lower-alpha;
}

.list-style-type-lower-alpha::after {
    content: ".";
} 
.list-style-type-upper-alpha {
    list-style-type:upper-alpha;
}

.list-style-type-upper-alpha::after {
    content: ".";
} 





.list-unstyled{
    list-style-type: none;
}

ol[type="i"] {
    list-style-type: lower-roman;
    }

 /* ol[type="i"] > li::after {
    content: ".";
} */
  
ol[type="I"] {
    list-style-type: upper-roman;
    }

/*  ol[type="I"] > li::after {
    content: ".";
} */



ol[type="a"] {
    list-style-type: lower-alpha;
    }

/*  ol[type="a"] > li::after {
    content: ")";
} 
  */
ol[type="A"] {
    list-style-type: upper-alpha;
    }

 /* ol[type="A"] > li::after {
    content: ")";
} */



/* -------------------------------------------------------------------------- */
/*                Tables                                                      */
/* -------------------------------------------------------------------------- */

table {
    &%table-matrix {
        display: table;
        -obfl-table-col-spacing: 2;
        -obfl-preferred-empty-space: 0;
        td > p,
        th > p {
            display: inline;
        }
    }
    
    &%table-matrix-transposed {
        @extend %table-matrix;
        render-table-by: column;
    }
    
    &%table-linearized {
        display: block;
        render-table-by: row;
        &:has(> thead          th):not(:has(> :not(thead         ) th)),
        &:has(> tr:first-child th):not(:has(> :not(tr:first-child) th)) {
            render-table-by: column;
        }
        &::list-item {
            display: block;
        }
        &::table-by(row),
        &::table-by(column) {
            display: block;
            text-indent: -2;
            margin-left: 2;
            &::list-item {
                &::before {
                    content: ' ⠆ ';
                    text-transform: none;
                    hyphens: initial;
                }
                &:first-child {
                    &::before {
                        content: none;
                    }
                }
            }
        }
        td > p,
        th > p {
            display: inline;
        }
    }
    
    &%table-as-list {
        display: block;
        render-table-by: row;
        &:has(> thead          th):not(:has(> :not(thead         ) th)),
        &:has(> tr:first-child th):not(:has(> :not(tr:first-child) th)) {
            render-table-by: column;
        }
        th::after {
            content: ': ';
        }
        &::list-item {
            display: block;
        }
        &::table-by(row),
        &::table-by(column) {
            display: block;
            margin-left: 2;
            &::list-item {
                display: block;
                margin-left: 2;
                text-indent: -2;
                &:first-child {
                    text-indent: -4;
                    // does not work:
                    // > p { ... }
                }
            }
        }
        td > p,
        th > p {
            // "text-indent: inherit" does not work so we just drop p's altogether
            display: inline;
        }
        td:blank::after {
            content: "(tom)";
        }
    }
    
    &%table-fallback {
        @extend %table-matrix;
        
        // format table as list when matrix format results in at least 1 forced line break,
        // or the total height in matrix format is more than 33% larger
        -obfl-scenario-cost: -obfl-evaluate('(+ (* 10 $forced-break-count) (* .75 $total-height))');
        &:-obfl-alternate-scenario {
            @extend %table-as-list;
            -obfl-scenario-cost: -obfl-evaluate('$total-height');
        }
    }
    
    &.table-matrix {
        @extend %table-matrix;
    }
    
    &.table-matrix-transposed {
        @extend %table-matrix-transposed;
    }
    
    &.table-linearized {
        @extend %table-linearized;
    }
    
    &.table-as-list {
        @extend %table-as-list;
    }
    
    &.table-fallback {
        @extend %table-fallback;
    }
    
    &:not([class]) {
        @extend %#{$default-table-class};
    }
    
    caption {
        display: block;
        text-indent: 2;
        margin-top: 1;
        margin-bottom: 1;
        text-align: left;
    }

    caption::after,
    &:not(:has(caption))::before {
        display: block;
        text-indent: 2;
        margin-top: 1;
        margin-bottom: 1;
        content: 'Tabell starter';
    }
    
    &::after {
        display: block;
        text-indent: 2;
        margin-top: 1;
        margin-bottom: 1;
        content: 'Tabell slutter';
    }
}

/* -------------------------------------------------------------------------- */
/*                Note and endnote                                            */
/* -------------------------------------------------------------------------- */

/* Remove note references by default */
noteref,
a[epub|type~='noteref'] {
    display: none;
}

note,
*[epub|type~='note'], *[epub|type~='footnote'], *[epub|type~='endnote'], *[epub|type~='rearnote'] {
    text-align: left;
    
    /* Note: inline content in notes are wrapped into <p> elements in pre-processing.xsl */
    
    *:first-child {
        text-indent: -2;
        
        &::before {
            content: '⠠';
        }
    }
    
    /* Remove notes by default */
    display: none;
}

/* Remove groups of notes by default */
*.notes, *.footnotes, *.endnotes,
*[epub|type~='notes'], *[epub|type~='footnotes'], *[epub|type~='endnotes'], *[epub|type~='rearnotes'] {
    display: none;
}

/* Remove rearmatter that only contains notes by default */
rearmatter:not(:has(> level1:not(.notes):not(.footnotes):not(.endnotes))) {
    display: none;
}

/* An extend-only selector (%endnotes-title) would be more appropriate
 * but does not seem to work in the 'end-of-book' case */
@mixin endnotes-title {
        display: block;
        margin-top: 2;
        margin-left: 2;
        margin-right: 0;
        margin-bottom: 1;
        text-align: center;
        border-top: ⠉;
        border-bottom: ⠉;
        content: 'Fotnoter';
        text-transform: auto;
}

/*
 * noteref numbering is implemented in pre-processing.xsl
 * FIXME: could be implemented in CSS
 */
@mixin noteref($refattr) {
        display: inline;
        &::before {
                content: '⠠';
        }
        &::alternate {
                display: block;
                content: target-content(attr($refattr));
                
                margin-left: 4;
                @if ($notes-placement == 'bottom-of-page') {
                        flow: footnotes;
                } @else {
                        flow: endnotes;
                }
        }
}

@if ($include-notes) {
        
        @page notes {
                margin-left: 0;
                @if $show-braille-page-numbers {
                        @bottom-center {
                                content: counter(page);
                        }
                }
        }
        
        noteref {
            @include noteref(idref);
        }
        a[epub|type~='noteref'] {
            @include noteref(href);
        }

        @if ($notes-placement == 'bottom-of-page') {
                @page {
                        @footnotes {
                                content: flow(footnotes, page);
                                max-height: 15;
                                border-top: ⠤;
                                margin-left: 0;
                                -obfl-fallback-collection: endnotes;
                        }
                }
                .notes-placement {
                        -obfl-use-when-collection-not-empty: footnotes;
                }
                .notes-placement-fallback {
                        -obfl-use-when-collection-not-empty: endnotes;
                }
                
        } @else if ($notes-placement == 'end-of-book') {
                book, html {
                        &:has(noteref)::after,
                        &:has(a[epub|type~='noteref'])::after {
                                &::before {
                                        @include endnotes-title;
                                        page-break-before: right;
                                }
                                content: flow(endnotes, document);
                               /* page: notes;*/
                        }
                }
        }
        @if ($notes-placement == 'bottom-of-page' or $notes-placement == 'end-of-volume') {
                book, html {
                        &:has(noteref, a[epub|type~='noteref'])::alternate {
                               @include endnotes-title;
                               flow: endnotes-title;
                        }
                }
                @volume {
                        @end {
                                content: flow(endnotes-title, page) flow(endnotes, volume);
                                page: notes;
                        }
                }
        }
}
